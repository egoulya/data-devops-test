[hero@HeroWithin ~]$ a=1

[hero@HeroWithin ~]$ b=3

[hero@HeroWithin ~]$ echo file{$a..$b}
file{1..3}

[hero@HeroWithin ~]$ eval echo file{$a..$b}
file1 file2 file3

[hero@HeroWithin ~]$ bash -c "echo file{$a..$b}"
file1 file2 file3

Because of the way bash works, there is strict order of interpreting variables and expansion of braces.
One cannot use variables in braces without workaround. I found 2 of them, one using eval and other is telling
bash to interpret whole stirng and not command.
